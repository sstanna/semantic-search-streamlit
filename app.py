import streamlit as st
import joblib
import numpy as np

# –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ –∏ –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ç–æ—Ä–∞
@st.cache_resource
def load_model():
    model = joblib.load("model/classifier.pkl")
    vectorizer = joblib.load("model/vectorizer.pkl")
    return model, vectorizer

model, vectorizer = load_model()

# –¢–µ–º–∞—Ç–∏–∫–∏
topics = ["—Å–ø–æ—Ä—Ç", "—é–º–æ—Ä", "—Ä–µ–∫–ª–∞–º–∞", "—Å–æ—Ü—Å–µ—Ç–∏", "–ø–æ–ª–∏—Ç–∏–∫–∞", "–ª–∏—á–Ω–∞—è –∂–∏–∑–Ω—å"]

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å
st.title("üß† –¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞")
st.write("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–µ–∫—Å—Ç (2‚Äì30 —Å–ª–æ–≤), —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –µ–≥–æ —Ç–µ–º–∞—Ç–∏–∫—É.")

text = st.text_area("–¢–µ–∫—Å—Ç:")

if st.button("üîç –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å") and text:
    X = vectorizer.transform([text])
    probs = model.predict_proba(X)

    st.subheader("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    for i, topic in enumerate(topics):
        st.write(f"**{topic}**: {probs[0][i]:.2f}")

    # –í—ã–≤–æ–¥ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ç–µ–º (–ø–æ—Ä–æ–≥ 0.5)
    predicted = [topics[i] for i, p in enumerate(probs[0]) if p > 0.5]
    if predicted:
        st.success(f"üè∑Ô∏è –í–µ—Ä–æ—è—Ç–Ω—ã–µ —Ç–µ–º–∞—Ç–∏–∫–∏: {', '.join(predicted)}")
    else:
        st.warning("‚ö†Ô∏è –ù–∏ –æ–¥–Ω–∞ —Ç–µ–º–∞—Ç–∏–∫–∞ –Ω–µ –¥–æ—Å—Ç–∏–≥–ª–∞ –ø–æ—Ä–æ–≥–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏.")
